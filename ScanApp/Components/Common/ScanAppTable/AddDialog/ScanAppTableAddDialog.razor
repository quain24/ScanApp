@using ScanApp.Components.Common.ScanAppTable.Options
@using System.Reflection
@using ScanApp.Components.Common.ScanAppTable.Extensions
@typeparam TItem

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Outlined.Add" />
            Add
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer>
            <MudGrid>
                <MudForm @ref="_form" IsValidChanged="@OnValidationChanged">
                    <AddFieldGenerator ColumnConfigs="@ColumnConfigs" KeyPressed="KeyPressed"
                                       ItemChanged="@((args) => ItemHasChanged(args.Item1, args.Item2))"
                                       NewItem="@NewItem"/>
                </MudForm>
            </MudGrid>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Error" OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" Disabled="_okDisabled" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public List<ColumnConfig<TItem>> ColumnConfigs { get; set; }

    [Parameter]
    public TItem NewItem { get; set; }

    private MudForm _form;
    private bool _okDisabled;

    private void ItemHasChanged(int index, object value)
    {
        if (ColumnConfigs[index].IsNested)
            ColumnConfigs[index].PropInfo.SetPropertyValue(NewItem, ColumnConfigs[index].PropertyFullName, value);
        else
            ColumnConfigs[index].PropInfo.SetValue(NewItem, value);
    }

    private void OnValidationChanged(bool isFormValid)
    {
        _okDisabled = !isFormValid;
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void Submit()
    {
        if (!_form.IsValid)
        {
            return;
        }
        MudDialog.Close(DialogResult.Ok(NewItem));
    }

    public void KeyPressed(KeyboardEventArgs keyboardEventArgs)
    {
        if (keyboardEventArgs.Key != "Enter")
        {
            return;
        }
        Submit();
    }
}
