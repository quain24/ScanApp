@inherits Dialog<T>
@typeparam T

<MudDialog>
    <DialogContent>
        @if (Configs?.Count > 0)
        {
            <MudForm @ref="_form" @bind-IsValid="@_success" Class="m-0 p-0">
                <FilterFieldCreator T="T" @ref="_filterFields" CultureInfo="CultureInfo" OnKeyDown="OnKeyDown" MaxFieldSetHeight="DialogContentHeight" StartExpanded="StartExpanded" Configs="Configs" />
            </MudForm>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Class="ml-auto" Variant="Variant.Filled" Color="Color.Error" OnClick="Cancel">Cancel</MudButton>
        <MudButton Class="mr-auto" Variant="Variant.Filled" Color="Color.Primary" Disabled="!_success" OnClick="Submit">Apply filters</MudButton>
    </DialogActions>
</MudDialog>

@code
{
    /// <inheritdoc cref="FieldCreatorBase{T}.StartExpanded" />
    [Parameter] public bool StartExpanded { get; set; }

    private MudForm _form;
    private bool _success = true;
    private FilterFieldCreator<T> _filterFields;

    protected override void Submit()
    {
        if (_form is null)
        {
            MudDialog.Cancel();
        }

        _form?.Validate();

        if (_success is false)
            return;
        var filters = _filterFields.GetFilters();

        MudDialog.Close(DialogResult.Ok(filters));
    }

    protected override void Cancel() => MudDialog.Cancel();
}