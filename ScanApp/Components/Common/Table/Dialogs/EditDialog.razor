@using ScanApp.Components.Common.ScanAppTable.Options
@using ScanApp.Common.Extensions
@typeparam T

<MudDialog>
    <DialogContent>
        @if (TargetItem is not null)
        {
            <MudForm @ref="_form" @bind-IsValid="@_success" Class="m-0 p-0">
                <EditFieldCreator T="T" @ref="_fieldCreator" StartExpanded="StartExpanded" Configs="Configs" @bind-TargetItem="@TargetItem"></EditFieldCreator>
            </MudForm>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Class="ml-auto" Variant="Variant.Filled" Color="Color.Error" OnClick="Cancel">Cancel</MudButton>
        <MudButton Class="mr-auto" Variant="Variant.Filled" Color="Color.Primary" Disabled="!_success" OnClick="Submit">Save changes</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public List<ColumnConfig<T>> Configs { get; set; }

    [Parameter] public bool ExpandInvalidPanelsOnStart { get; set; } = true;

    [Parameter] public bool StartExpanded { get; set; }

    [Parameter] public T SourceItem { get; set; }

    private T TargetItem { get; set; }

    private MudForm _form;
    private EditFieldCreator<T> _fieldCreator;
    private bool _success = true;

    protected override void OnInitialized()
    {
        TargetItem = SourceItem.Copy();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender is false) return;

        _form?.Validate();

        if(ExpandInvalidPanelsOnStart)
            OpenInvalidExpansionPanels();

        StateHasChanged();
    }

    private void OpenInvalidExpansionPanels()
    {
        if (_form.IsValid) return;

        foreach (var (key, fieldReference) in _fieldCreator.FieldReferences)
        {
            if (fieldReference?.ValidationErrors?.Count != 0)
            {
                _fieldCreator.Panels[key].Expand(false);
            }
        }
        StateHasChanged();
    }

    Task Submit()
    {
        if (_form is null)
        {
            MudDialog.Cancel();
            return Task.CompletedTask;
        }

        if (_success is false)
            return Task.CompletedTask;

        MudDialog.Close(DialogResult.Ok(TargetItem));
        return Task.CompletedTask;
    }

    void Cancel() => MudDialog.Cancel();
}