@page "/devexpress-scheduler-test"

@using DevExpress.XtraScheduler.Internal
@using DevExpress.Blazor.Scheduler.Internal

<DxScheduler StartDate="@(DateTime.Today + TimeSpan.FromHours(8))"
             DataStorage="@DataStorage"
             ResourceNavigatorVisible="false"
             GroupType="SchedulerGroupType.Resource"
             AppointmentUpdating="OnEditing"
             AppointmentRemoved="OnRemove">
    <DxSchedulerTimelineView Duration="@(TimeSpan.FromHours(24))" CellMinWidth="100">
        <Scales>
            <DxSchedulerTimeScale Unit="@SchedulerTimeScaleUnit.Day" UnitCount="1"></DxSchedulerTimeScale>
            <DxSchedulerTimeScale Unit="@SchedulerTimeScaleUnit.Hour" UnitCount="2"></DxSchedulerTimeScale>
        </Scales>
    </DxSchedulerTimelineView>
</DxScheduler>
<MudPaper></MudPaper>
<MudButton OnClick="stop"></MudButton>
@code {

    public void stop()
    {
        var t = "";
    }
    public void OnAdding(DxSchedulerAppointmentItem args)
    {
        var t = args.SourceObject;
        Console.WriteLine($"Added - {((ResourceAppointmentCollection.ResourceAppointment)t).Recurrence}");
        Console.WriteLine($"Type - {((ResourceAppointmentCollection.ResourceAppointment)t).AppointmentType}");
        Console.WriteLine($"Status - {((ResourceAppointmentCollection.ResourceAppointment)t).Status}");
    }

    public void OnEdit(DxSchedulerAppointmentItem args)
    {
        var t = args.SourceObject;
        var occ = OccurrenceCalculator.CreateInstance(args?.RecurrenceInfo);
        var index = occ.FindOccurrenceIndex(args.Start, TimeSpan.FromDays(args.RecurrenceInfo.Frequency));
        var firstIndex = occ.FindFirstOccurrenceIndex(new DxSchedulerDateTimeRange(DateTime.Today, TimeSpan.FromDays(100)), TimeSpan.Zero);

        Console.WriteLine($"Edited - {((ResourceAppointmentCollection.ResourceAppointment)t).Recurrence}");
        Console.WriteLine($"Type - {((ResourceAppointmentCollection.ResourceAppointment)t).AppointmentType}");
        Console.WriteLine($"Status - {((ResourceAppointmentCollection.ResourceAppointment)t).Status}");
    }
    
    public void OnEditing(SchedulerAppointmentOperationEventArgs args)
    {
        var t = args.Appointment;
        var g = args.Appointment?.RecurrenceIndex;
        var occ = OccurrenceCalculator.CreateInstance(t?.RecurrenceInfo);
        var index = occ.FindOccurrenceIndex(t.Start, TimeSpan.FromDays(t.RecurrenceInfo.Frequency));
        var firstIndex = occ.FindFirstOccurrenceIndex(new DxSchedulerDateTimeRange(DateTime.Today, TimeSpan.FromDays(100)), TimeSpan.Zero);        
    }

    public void OnRemove(DxSchedulerAppointmentItem args)
    {
        var t = args.SourceObject;
        var occ = OccurrenceCalculator.CreateInstance(args?.RecurrenceInfo);
        var index = occ.FindOccurrenceIndex(args.Start, TimeSpan.FromDays(args.RecurrenceInfo.Frequency));
        var firstIndex = occ.FindFirstOccurrenceIndex(new DxSchedulerDateTimeRange(DateTime.Today, TimeSpan.FromDays(100)), TimeSpan.Zero);
        Console.WriteLine($"Removed - {((ResourceAppointmentCollection.ResourceAppointment)t).Recurrence}");
        Console.WriteLine($"Type - {((ResourceAppointmentCollection.ResourceAppointment)t).AppointmentType}");
        Console.WriteLine($"Status - {((ResourceAppointmentCollection.ResourceAppointment)t).Status}");
    }

    DxSchedulerDataStorage DataStorage = new DxSchedulerDataStorage()
    {
        AppointmentsSource = ResourceAppointmentCollection.GetAppointments(),
        AppointmentMappings = new DxSchedulerAppointmentMappings()
        {
            Id = "Id",
            Type = "AppointmentType",
            Start = "StartDate",
            End = "EndDate",
            Subject = "Caption",
            AllDay = "AllDay",
            Location = "Location",
            Description = "Description",
            LabelId = "Label",
            StatusId = "Status",
            RecurrenceInfo = "Recurrence",
            ResourceId = "DepotId"
        },
        ResourcesSource = ResourceAppointmentCollection.GetResourcesForGrouping(),
        ResourceMappings = new DxSchedulerResourceMappings()
        {
            Id = "Id",
            Caption = "Name",
            BackgroundCssClass = "BackgroundCss",
            TextCssClass = "TextCss"
        }
    };
}
